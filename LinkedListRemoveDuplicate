using system;

public class LinkedList
{
  Node head;
  
  class Node
  {
    public int data;
    public Node next;
    public Node(int d)
    {
     data=d;
     next=null;
    }
  }
  
  
void RemoveDuplicate()
{
   Dictionary<int, int> dict = new Dictionary<int, int>();
   Node current = head;
   dict.Add(current.data, 1);
   while (current.next != null)
       {
           if (dict.ContainsKey(current.next.data))
              {
                    current.next = current.next.next;
              }
           else
              {
                    dict.Add(current.next.data, 1);
                    current = current.next;
              }
       }
 }

public void push (int data)
{
        Node new_node = new Node(new_data); 
  
        /* 3. Make next of new Node as head */
        new_node.next = head; 
  
        /* 4. Move the head to point to new Node */
        head = new_node; 
  
}

 void printList() 
    { 
        Node temp = head; 
        while (temp != null) 
        { 
            Console.Write(temp.data+" "); 
            temp = temp.next; 
        }  
        Console.WriteLine(); 
    } 
  
    /* Driver code */
    public static void Main(String []args) 
    { 
        LinkedList llist = new LinkedList(); 
        llist.push(20); 
        llist.push(13); 
        llist.push(13); 
        llist.push(11); 
        llist.push(11); 
        llist.push(11); 
          
        Console.WriteLine("List before removal of duplicates"); 
        llist.printList(); 
          
        llist.removeDuplicates(); 
          
        Console.WriteLine("List after removal of elements"); 
        llist.printList(); 
    } 
  
}

