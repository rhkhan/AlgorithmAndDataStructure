// C# program to detect a cycle/loop in a linked list 
using System; 
using System.Collections.Generic; 

class LinkedList { 

	public Node head;
	public class Node { 
		public int data; 
		public Node next; 
		public Node(int d) 
		{ 
			data = d; 
			next = null; 
		} 
	} 

	/* Inserts a new Node at front of the list. */
	public void push(int new_data) 
	{ 

		Node new_node = new Node(new_data); 
		new_node.next = head; 
		head = new_node; 
	} 
  
	public static bool detectCycle(Node node) 
	{ 
		HashSet<Node> hashset = new HashSet<Node>(); 
		while (node != null) { 
			if (hashset.Contains(node)) 
				return true; 
        
			hashset.Add(node); 
			node = node.next; 
		} 

		return false; 
	} 

	/* Driver code*/
	public static void Main(String[] args) 
	{ 
		LinkedList llist = new LinkedList(); 

		llist.push(20); 
		llist.push(4); 
		llist.push(15); 
		llist.push(10); 

		/*Create loop for testing */
		llist.head.next.next.next.next = llist.head; 

		if (detectCycle(llist.head)) 
			Console.WriteLine("Loop found"); 
		else
			Console.WriteLine("No Loop"); 
	} 
}
