// detect cycle in a linked list 
using System; 

public class LinkedList 
{ 
	Node head;
	public class Node 
	{ 
		public int data; 
		public Node next; 
		public Node(int d) 
		{ 
			data = d; 
			next = null; 
		} 
	} 

	/* Inserts a new Node at front of the list. */
	public void push(int new_data) 
	{ 

		Node new_node = new Node(new_data); 
		new_node.next = head; 
		head = new_node; 
	} 

	bool detectCycle() 
	{ 
		Node slow = head, fast = head; 
		while (slow != null && fast != null && 
								fast.next != null) 
		{ 
			slow = slow.next; 
			fast = fast.next.next; 
			if (slow == fast) 
				return true 
		} 
		return false;
	} 

	/* Driver code */
	public static void Main(String []args) 
	{ 
		LinkedList llist = new LinkedList(); 

		llist.push(20); 
		llist.push(4); 
		llist.push(15); 
		llist.push(10); 

		/*Create loop for testing */
		llist.head.next.next.next.next = llist.head; 

		if(llist.detectLoop())
      Console.writeLine("Cycle found");
    else
      Console.writeLine("No Cycle");
	} 
} 

// This code is contributed by Princi Singh 
